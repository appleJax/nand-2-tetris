// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=load000, b=load001, c=load010, d=load011, e=load100, f=load101, g=load110, h=load111);

    RAM8(in=in, load=load000, address=address[3..5], out=r0);
    RAM8(in=in, load=load001, address=address[3..5], out=r1);
    RAM8(in=in, load=load010, address=address[3..5], out=r2);
    RAM8(in=in, load=load011, address=address[3..5], out=r3);
    RAM8(in=in, load=load100, address=address[3..5], out=r4);
    RAM8(in=in, load=load101, address=address[3..5], out=r5);
    RAM8(in=in, load=load110, address=address[3..5], out=r6);
    RAM8(in=in, load=load111, address=address[3..5], out=r7);

    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);
}